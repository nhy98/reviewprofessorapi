package promn.dao.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.TableGenerator;

/**
* Report generated by hbm2java
*           The report Report
*/

@Entity(name = "Report")
@Table(name = "Report")
public class Report implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	/** The id of the report */
	private int id;
	
	/** The content of the report */
	private String content;
	
	/** The reason of the report */
	private String reason;
	
	/** review of the report */
	private Review review;
	
	/** user of the report */
	private User user;
	
	/**
	 * Instantiates a new report entity
	 */
	public Report() {
		super();
	}

	/**
	 * Instantiates a new report entity
	 * 
	 * @param id:
	 *            The id of report
	 */
	public Report(int id) {
		super();
		this.id = id;
	}
	
	/**
	 * Instantiates a new report entity
	 */
	public Report(int id, String content, String reason, Review review, User user) {
		super();
		this.id = id;
		this.content = content;
		this.reason = reason;
		this.review = review;
		this.user = user;
	}

	
	/**
	 * Setter and getter methods
	 */
	@Id
	@TableGenerator(name = "gen_id", table = "HIBERNATE_GEN_ID", pkColumnName = "GEN_NAME", valueColumnName = "GEN_VALUE", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "gen_id")
	@Column(name = "report_id", unique = true, nullable = false, precision = 22, scale = 0)
	public int getId() {
		return this.id;
	}
	public void setId(int id) {
		this.id = id;
	}
	
	@Column(name = "content")
	public String getContent() {
		return content;
	}
	public void setContent(String content) {
		this.content = content;
	}
	
	@Column(name = "reason")
	public String getReason() {
		return reason;
	}
	public void setReason(String reason) {
		this.reason = reason;
	}

	@ManyToOne
	@JoinColumn(name = "review_id", nullable = false)
	public Review getReview() {
		return review;
	}
	public void setReview(Review review) {
		this.review = review;
	}

	@ManyToOne
	@JoinColumn(name = "user_id", nullable = false)
	public User getUser() {
		return user;
	}
	public void setUser(User user) {
		this.user = user;
	}
}

