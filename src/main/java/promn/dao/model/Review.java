package promn.dao.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
* Amreview generated by hbm2java

* 
*           The review Review
*/

@Entity(name = "Review")
@Table(name = "Review")
public class Review implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	/** The id of the review */
	private int id;
	
	/** The teacherRate of the review */
	private int teacherRate;
	
	/** The subjectRate of the review */
	private int subjectRate;
	
	/** The createdDate of the review */
	private Date createdDate;
	
	/** The createdDate of the review */
	private String tag;
	
	/** The content of the review */
	private String content;
	
	/** The content of the review */
	private int credit;
	
	/** The content of the review */
	private int attendance;
	
	/** Subject of the review */
	private Clazz clazz;
	
	/** Subject of the review */
	private User user;

	/** Review of the subject */
	private Set<Report> reports = new HashSet<Report>(0);
	
	/**
	 * Instantiates a new review entity
	 */
	public Review() {
		super();
	}

	/**
	 * Instantiates a new review entity
	 * 
	 * @param id:
	 *            The id of review
	 */
	public Review(int id) {
		super();
		this.id = id;
	}
	
	/**
	 * Instantiates a new review entity
	 */
	public Review(int id, int teacherRate, int subjectRate, Date createdDate, String tag, String content,
			int credit, int attendance, Clazz clazz, User user, Set<Report> reports) {
		super();
		this.id = id;
		this.teacherRate = teacherRate;
		this.subjectRate = subjectRate;
		this.createdDate = createdDate;
		this.tag = tag;
		this.content = content;
		this.credit = credit;
		this.attendance = attendance;
		this.clazz = clazz;
		this.user = user;
		this.reports = reports;
	}
	
	/**
	 * Setter and getter methods
	 */
	@Id
	@TableGenerator(name = "gen_id", table = "HIBERNATE_GEN_ID", pkColumnName = "GEN_NAME", valueColumnName = "GEN_VALUE", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "gen_id")
	@Column(name = "review_id", unique = true, nullable = false, precision = 22, scale = 0)
	public int getId() {
		return this.id;
	}
	public void setId(int id) {
		this.id = id;
	}
	
	@Column(name = "rate_teacher", nullable=false)
	public int getTeacherRate() {
		return teacherRate;
	}
	public void setTeacherRate(int teacherRate) {
		this.teacherRate = teacherRate;
	}

	@Column(name = "rate_subject", nullable=false)
	public int getSubjectRate() {
		return subjectRate;
	}
	public void setSubjectRate(int subjectRate) {
		this.subjectRate = subjectRate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_created")
	public Date getCreatedDate() {
		return createdDate;
	}
	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "tags")
	public String getTag() {
		return tag;
	}
	public void setTag(String tag) {
		this.tag = tag;
	}

	@Column(name = "content_review")
	public String getContent() {
		return content;
	}
	public void setContent(String content) {
		this.content = content;
	}

	@Column(name = "creadit_or_not")
	public int getCredit() {
		return credit;
	}
	public void setCredit(int credit) {
		this.credit = credit;
	}

	@Column(name = "attendance_require")
	public int getAttendance() {
		return attendance;
	}
	public void setAttendance(int attendance) {
		this.attendance = attendance;
	}

	@ManyToOne
	@JoinColumn(name = "class_id", nullable = false)
	public Clazz getClazz() {
		return clazz;
	}
	public void setClazz(Clazz clazz) {
		this.clazz = clazz;
	}

	@ManyToOne
	@JoinColumn(name = "user_id", nullable = false)
	public User getUser() {
		return user;
	}
	public void setUser(User user) {
		this.user = user;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "review")
	@JsonIgnore
	public Set<Report> getReports() {
		return reports;
	}
	public void setReports(Set<Report> reports) {
		this.reports = reports;
	}
}

